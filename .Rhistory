auc_pal = cet_pal(100, name = 'l19') %>% rev()
p2 = meta %>%
# arrange(auc_fit) %>%
ggplot(aes(x = y, y = x, fill = auc, color = auc)) +
ggtitle('Vespucci') +
ggrastr::rasterise(
geom_point(size = 0.3, shape = 21, stroke = 0), dpi = 300
) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_gradientn(colours = auc_pal,
name = 'AUC   ', labels = labels,
limits = range, breaks = brks) +
scale_color_gradientn(colours = auc_pal,
name = 'AUC   ', labels = labels,
limits = range, breaks = brks) +
guides(fill = guide_colorbar(frame.colour = 'black', ticks = FALSE),
color = guide_colorbar(frame.colour = 'black', ticks = FALSE)) +
coord_fixed() +
boxed_theme(size_lg = 5, size_sm = 5) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
# axis.text.y = element_text(angle = 90, hjust = c(1, 0)),
# axis.text.x = element_text(hjust = c(0, 1)),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.length.x = unit(0, 'lines'),
axis.ticks.length.y = unit(0, 'lines'),
legend.position = 'right',
legend.justification = 'bottom',
legend.key.width = unit(0.18, 'lines'),
legend.key.height = unit(0.18, 'lines'),
# plot.title = element_text(size = 5)
plot.title = element_blank()
)
p2 = meta %>%
# arrange(auc_fit) %>%
ggplot(aes(x = y, y = x, fill = auc, color = auc)) +
ggtitle('Vespucci') +
ggrastr::rasterise(
geom_point(size = 0.3, shape = 21, stroke = 0), dpi = 300
) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_gradientn(colours = auc_pal) +
scale_color_gradientn(colours = auc_pal) +
guides(fill = guide_colorbar(frame.colour = 'black', ticks = FALSE),
color = guide_colorbar(frame.colour = 'black', ticks = FALSE)) +
coord_fixed() +
boxed_theme(size_lg = 5, size_sm = 5) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
# axis.text.y = element_text(angle = 90, hjust = c(1, 0)),
# axis.text.x = element_text(hjust = c(0, 1)),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.length.x = unit(0, 'lines'),
axis.ticks.length.y = unit(0, 'lines'),
legend.position = 'right',
legend.justification = 'bottom',
legend.key.width = unit(0.18, 'lines'),
legend.key.height = unit(0.18, 'lines'),
# plot.title = element_text(size = 5)
plot.title = element_blank()
)
p2
p2 = meta %>%
# arrange(auc_fit) %>%
ggplot(aes(x = x, y = y, fill = auc, color = auc)) +
ggtitle('Vespucci') +
geom_point() +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_gradientn(colours = auc_pal) +
scale_color_gradientn(colours = auc_pal) +
guides(fill = guide_colorbar(frame.colour = 'black', ticks = FALSE),
color = guide_colorbar(frame.colour = 'black', ticks = FALSE)) +
coord_fixed() +
boxed_theme(size_lg = 5, size_sm = 5) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
# axis.text.y = element_text(angle = 90, hjust = c(1, 0)),
# axis.text.x = element_text(hjust = c(0, 1)),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.length.x = unit(0, 'lines'),
axis.ticks.length.y = unit(0, 'lines'),
legend.position = 'right',
legend.justification = 'bottom',
legend.key.width = unit(0.18, 'lines'),
legend.key.height = unit(0.18, 'lines'),
# plot.title = element_text(size = 5)
plot.title = element_blank()
)
p2
p1 = p1_1 | p1_2 | p1_3
p1
auc_pal = cet_pal(100, name = 'l19') %>% rev()
p2 = meta %>%
ggplot(aes(x = x, y = y, fill = auc, color = auc)) +
geom_point() +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_gradientn(colours = auc_pal) +
scale_color_gradientn(colours = auc_pal) +
guides(fill = guide_colorbar(frame.colour = 'black', ticks = FALSE),
color = guide_colorbar(frame.colour = 'black', ticks = FALSE)) +
boxed_theme() +
theme(
legend.position = 'top'
)
p2
p1 | p2
p1_2
p1_2 = meta %>%
filter(y < 375, y > 125)
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_2 = meta %>%
filter(y < 375, y > 125) %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_2
p1_2 = meta %>%
filter(y < 370, y > 130) %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_2
p1_2 = meta %>%
filter(y < 380, y > 120) %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_2
p1_2 = meta %>%
filter(y < 380, y > 120) %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_2
p1_2 = meta %>%
filter(y < 300, y > 100) %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_2
p1_2 = meta %>%
filter(y < 350, y > 150) %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_2
p1_2 = meta %>%
filter(y < 350, y > 160) %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_2
library(Seurat)
library(tidyverse)
library(magrittr)
library(Vespucci)
library(Seurat)
library(tidyverse)
library(magrittr)
library(Vespucci)
sc = readRDS("data/simulations/objects/input=stripes-de_prob=0.5-de_size=2-reps=3-rep_de_jitter=1-rep_depth_jitter=0.3-sp_genes=f-seed=0.rds")
meta = sc@meta.data
counts = GetAssayData(sc, slot='counts')
meta_tmp = meta %>%
filter(y < 350, y > 160) %>%
# meta_tmp %<>%
#     mutate(
#         true_label = ifelse(label_sim %in% c('background', 'label1'), 'Control', 'Perturbed')
#     ) %>%
#     dplyr::select(
#         x,y,label,true_label,barcode,replicate
#     )
# meta_tmp %>%
#     ggplot(aes(x=x,y=y, color=replicate)) +
#     geom_point()
# counts_tmp = counts[,meta_tmp$barcode]
# meta_tmp$barcode = paste0('barcode_',1:2000)
# rownames(meta_tmp) = meta_tmp$barcode
# colnames(counts_tmp) = meta_tmp$barcode
# out_list = list(
#     'count'=counts_tmp,
#     'meta'=meta_tmp
# )
# saveRDS(out_list, "/work/upcourtine/vespucci/simulations/objects/toy_data.rds")
library(Seurat)
meta_tmp = meta %>%
filter(y < 350, y > 160)
counts = GetAssayData(sc, slot='counts')
meta_tmp = sc@meta.data %>%
filter(
y < 350, y > 160
)
meta_tmp = sc@meta.data %>%
filter(
y < 350, y > 160
) %>%
mutate(
true_label = ifelse(label_sim %in% c('background', 'label1'), 'Control', 'Perturbed')
) %>%
dplyr::select(
x,y,label,true_label,barcode,replicate
)
meta %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
source('R/theme.R')
meta %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
meta_tmp %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
meta_tmp = sc@meta.data %>%
filter(
y < 350, y > 150,
) %>%
mutate(
true_label = ifelse(label_sim %in% c('background', 'label1'), 'Control', 'Perturbed')
) %>%
dplyr::select(
x,y,label,true_label,barcode,replicate
)
meta_tmp %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
meta_tmp = sc@meta.data %>%
filter(
y < 350, y > 160,
) %>%
mutate(
true_label = ifelse(label_sim %in% c('background', 'label1'), 'Control', 'Perturbed')
) %>%
dplyr::select(
x,y,label,true_label,barcode,replicate
)
meta_tmp %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
meta_tmp = sc@meta.data %>%
filter(
y < 350, y > 160, x < 300, x > 100
) %>%
mutate(
true_label = ifelse(label_sim %in% c('background', 'label1'), 'Control', 'Perturbed')
) %>%
dplyr::select(
x,y,label,true_label,barcode,replicate
)
meta_tmp %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
set.seed(42)
meta_tmp = sc@meta.data %>%
filter(
y < 350, y > 160, x < 300, x > 100
) %>%
sample_n(2000) %>%
mutate(
true_label = ifelse(label_sim %in% c('background', 'label1'), 'Control', 'Perturbed')
) %>%
dplyr::select(
x,y,label,true_label,barcode,replicate
)
meta_tmp %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
counts_tmp = counts[,meta_tmp$barcode]
meta_tmp$barcode = paste0('barcode_',1:2000)
rownames(meta_tmp) = meta_tmp$barcode
colnames(counts_tmp) = meta_tmp$barcode
out_list = list(
'count'=counts_tmp,
'meta'=meta_tmp
)
gc()
setwd('C:/Users/teo/Documents/EPFL/projects/vespucci/')
library(Seurat)
library(tidyverse)
library(magrittr)
library(cetcolor)
source('R/theme.R')
obj = readRDS('data/test-package/toy_data.rds')
spatial_auc_res = readRDS('data/test-package/toy_data_spatial_auc_result.rds')
meta = obj$meta %>%
left_join(spatial_auc_res$aucs)
p1_1 = meta %>%
ggplot(aes(x=x,y=y, color=label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_2 = meta %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_3 = meta %>%
ggplot(aes(x=x,y=y, color=replicate)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
setwd('C:/Users/teo/Documents/EPFL/projects/vespucci/')
library(Seurat)
library(tidyverse)
library(magrittr)
library(cetcolor)
source('R/theme.R')
obj = readRDS('data/test-package/toy_data.rds')
meta = obj$meta %>%
left_join(spatial_auc_res$aucs)
p1_1 = meta %>%
ggplot(aes(x=x,y=y, color=label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_2 = meta %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
meta = obj$meta
p1_1 = meta %>%
ggplot(aes(x=x,y=y, color=label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_2 = meta %>%
ggplot(aes(x=x,y=y, color=true_label)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1_3 = meta %>%
ggplot(aes(x=x,y=y, color=replicate)) +
geom_point() +
boxed_theme() +
theme(
legend.position = 'top'
)
p1 = p1_1 | p1_2 | p1_3
p1
getwd()
data = readRDS('../../projects/vespucci/data/test-package/toy_data.rds')
save(data, 'data/spatial_sim.rda')
save(data, file='data/spatial_sim.rda')
rm(data)
document()
library(devtools)
?run_vespucci
document()
data("spatial_sim")
gc()
getwd()
test  = readRDS('../../projects/vespucci/data')
test  = readRDS('../../projects/vespucci/data/test-package/toy_data_spatial_auc_result.rds')
test$time_tracking$auc$time
sum(test$time_tracking$auc$time)
sum(test$time_tracking$auc$time)/60
load('spatial_sim')
document()
library(devtools)
getwd()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
?run_vespucci
?run_vespucci
document()
?run_vespucci
document()
?run_vespucci
document()
?run_vespucci
document()
?run_vespucci
document()
?run_vespucci
document()
?run_vespucci
document()
document()
?run_vespucci
document()
document()
rm(test)
document()
load('data/spatial_sim.rda')
load('data/spatial_sim_auc_df.rda')
View(spatial_auc_df)
str(data)
rm(data)
rm(spatial_auc_df)
load('spatial_sim.rda')
load(spatial_sim.rda)
getwd()
document()
usethis::use_data(spatial_auc_df)
document()
usethis::use_data(spatial_sim)
obj = readRDS('data/test-package/toy_data.rds')
obj = readRDS('../../projects/vespucci/data/test-package/toy_data.rds')
sc = CreateSeuratObject(obj$count, meta = obj$meta)
library(Seurat)
sc = CreateSeuratObject(obj$count, meta = obj$meta)
spatial_sim = CreateSeuratObject(obj$count, meta = obj$meta)
rm(sc)
usethis::use_data(spatial_sim)
document()
data("spatial_sim")
rm(list=ls())
data("spatial_sim")
gc()
res = readRDS('../../projects/vespucci/data/test-package/toy_data_spatial_auc_result.rds')
spatial_sim_auc_df = res$calculated_auc_df
gc()
usethis::use_data(spatial_sim_auc_df)
document()
spatial_sim_distance_metrics_df = res$distance_metrics_df
usethis::use_data(spatial_sim_distance_metrics_df)
document()
data("spatial_sim_distance_metrics_df")
data("spatial_sim_auc_df")
spatial_sim_auc_df
spatial_sim_calculated_auc_df = spatial_sim_auc_df
usethis::use_data(spatial_sim_calculated_auc_df)
document()
